/*
Autobahn App API

Was passiert auf Deutschlands Bundesstraßen? API für aktuelle Verwaltungsdaten zu Baustellen, Staus und Ladestationen. Außerdem Zugang zu Verkehrsüberwachungskameras und vielen weiteren Datensätzen. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Coordinate struct for Coordinate
type Coordinate struct {
	Lat *string `json:"lat,omitempty"`
	Long *string `json:"long,omitempty"`
}

// NewCoordinate instantiates a new Coordinate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoordinate() *Coordinate {
	this := Coordinate{}
	return &this
}

// NewCoordinateWithDefaults instantiates a new Coordinate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoordinateWithDefaults() *Coordinate {
	this := Coordinate{}
	return &this
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *Coordinate) GetLat() string {
	if o == nil || isNil(o.Lat) {
		var ret string
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Coordinate) GetLatOk() (*string, bool) {
	if o == nil || isNil(o.Lat) {
    return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *Coordinate) HasLat() bool {
	if o != nil && !isNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given string and assigns it to the Lat field.
func (o *Coordinate) SetLat(v string) {
	o.Lat = &v
}

// GetLong returns the Long field value if set, zero value otherwise.
func (o *Coordinate) GetLong() string {
	if o == nil || isNil(o.Long) {
		var ret string
		return ret
	}
	return *o.Long
}

// GetLongOk returns a tuple with the Long field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Coordinate) GetLongOk() (*string, bool) {
	if o == nil || isNil(o.Long) {
    return nil, false
	}
	return o.Long, true
}

// HasLong returns a boolean if a field has been set.
func (o *Coordinate) HasLong() bool {
	if o != nil && !isNil(o.Long) {
		return true
	}

	return false
}

// SetLong gets a reference to the given string and assigns it to the Long field.
func (o *Coordinate) SetLong(v string) {
	o.Long = &v
}

func (o Coordinate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !isNil(o.Long) {
		toSerialize["long"] = o.Long
	}
	return json.Marshal(toSerialize)
}

type NullableCoordinate struct {
	value *Coordinate
	isSet bool
}

func (v NullableCoordinate) Get() *Coordinate {
	return v.value
}

func (v *NullableCoordinate) Set(val *Coordinate) {
	v.value = val
	v.isSet = true
}

func (v NullableCoordinate) IsSet() bool {
	return v.isSet
}

func (v *NullableCoordinate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoordinate(val *Coordinate) *NullableCoordinate {
	return &NullableCoordinate{value: val, isSet: true}
}

func (v NullableCoordinate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoordinate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


