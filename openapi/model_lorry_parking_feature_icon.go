/*
Autobahn App API

Was passiert auf Deutschlands Bundesstraßen? API für aktuelle Verwaltungsdaten zu Baustellen, Staus und Ladestationen. Außerdem Zugang zu Verkehrsüberwachungskameras und vielen weiteren Datensätzen. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LorryParkingFeatureIcon struct for LorryParkingFeatureIcon
type LorryParkingFeatureIcon struct {
	Icon *string `json:"icon,omitempty"`
	Description *string `json:"description,omitempty"`
	Style *string `json:"style,omitempty"`
}

// NewLorryParkingFeatureIcon instantiates a new LorryParkingFeatureIcon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLorryParkingFeatureIcon() *LorryParkingFeatureIcon {
	this := LorryParkingFeatureIcon{}
	return &this
}

// NewLorryParkingFeatureIconWithDefaults instantiates a new LorryParkingFeatureIcon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLorryParkingFeatureIconWithDefaults() *LorryParkingFeatureIcon {
	this := LorryParkingFeatureIcon{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *LorryParkingFeatureIcon) GetIcon() string {
	if o == nil || isNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LorryParkingFeatureIcon) GetIconOk() (*string, bool) {
	if o == nil || isNil(o.Icon) {
    return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *LorryParkingFeatureIcon) HasIcon() bool {
	if o != nil && !isNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *LorryParkingFeatureIcon) SetIcon(v string) {
	o.Icon = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LorryParkingFeatureIcon) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LorryParkingFeatureIcon) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LorryParkingFeatureIcon) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LorryParkingFeatureIcon) SetDescription(v string) {
	o.Description = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *LorryParkingFeatureIcon) GetStyle() string {
	if o == nil || isNil(o.Style) {
		var ret string
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LorryParkingFeatureIcon) GetStyleOk() (*string, bool) {
	if o == nil || isNil(o.Style) {
    return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *LorryParkingFeatureIcon) HasStyle() bool {
	if o != nil && !isNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given string and assigns it to the Style field.
func (o *LorryParkingFeatureIcon) SetStyle(v string) {
	o.Style = &v
}

func (o LorryParkingFeatureIcon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	return json.Marshal(toSerialize)
}

type NullableLorryParkingFeatureIcon struct {
	value *LorryParkingFeatureIcon
	isSet bool
}

func (v NullableLorryParkingFeatureIcon) Get() *LorryParkingFeatureIcon {
	return v.value
}

func (v *NullableLorryParkingFeatureIcon) Set(val *LorryParkingFeatureIcon) {
	v.value = val
	v.isSet = true
}

func (v NullableLorryParkingFeatureIcon) IsSet() bool {
	return v.isSet
}

func (v *NullableLorryParkingFeatureIcon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLorryParkingFeatureIcon(val *LorryParkingFeatureIcon) *NullableLorryParkingFeatureIcon {
	return &NullableLorryParkingFeatureIcon{value: val, isSet: true}
}

func (v NullableLorryParkingFeatureIcon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLorryParkingFeatureIcon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


